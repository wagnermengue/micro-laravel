steps:
  - id: 'Gerando key'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=./backend/storage/credentials/google/service-account-storage.json.enc
      - --plaintext-file=./backend/storage/credentials/google/service-account-storage.json
      - --location=global
      - --keyring=course
      - --key=service-account

  - id: 'Rodando docker compose'
    name: 'gcr.io/$PROJECT_ID/docker-compose:1.25.5'
    args: ['-f', 'docker-compose.prod.yaml', 'up', '-d']
    env:
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=micro-video-storage
      - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/micro-video-storage

  - id: "Chown in /var/www"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','-u','root','micro-videos-app','chown','-R','www-data:www-data','/var/www']

  - id: 'Rodando docker ps'
    name: 'gcr.io/cloud-builders/docker'
    args: ['ps']

  - id: 'Rodando compose'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'composer', 'install', '-d', '/var/www/backend']

  - id: 'Copiando .env'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', './backend/.env.example', './backend/.env']

  - id: 'Copiando .env.testing'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', './backend/.env.testing.example', './backend/.env.testing']

  - id: 'Rodando key:generate'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/artisan', 'key:generate']

  - id: 'Rodando migrations'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/artisan', 'migrate']

  - id: 'Rodando tests'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'php', '/var/www/backend/vendor/bin/phpunit', '-c', '/var/www/backend/phpunit.xml']

  - id: 'Copiando frontend .env'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'cp', '/var/www/frontend/.env.example', '/var/www/frontend/.env']

  - id: 'Install front-end'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'npm', 'install', '--prefix', '/var/www/frontend']

  - id: 'Permission on scripts/build.sh'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'app', 'chmod', '+x', '/var/www/frontend/scripts/build.sh']

  - id: 'Build front-end'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','npm','run', 'build-laravel','--prefix', '/var/www/frontend']

  - id: 'Test Laravel and React integration'
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-w', '/var/www/backend', '-t', 'app', 'php', 'artisan', 'dusk', '--env=testing']
<?php

namespace Tests\Unit\Models;

use App\Models\CastMember;
use App\Traits\Uuid;
use EloquentFilter\Filterable;
use Illuminate\Database\Eloquent\SoftDeletes;
use PHPUnit\Framework\TestCase;

class CastMemberUnitTest extends TestCase
{
    /**
     * @var CastMember
     */
    private $cast_member;

    public static function setUpBeforeClass(): void
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }

    protected function setUp(): void
    {
        parent::setUp();
        $this->cast_member = new CastMember();
    }

    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public static function tearDownAfterClass(): void
    {
        parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
    }


    public function testFillableAttribute()
    {
        $fillable = ['name', 'type'];
        $this->assertEquals($fillable, $this->cast_member->getFillable());
    }

    public function testIfUseTraitsAttribute()
    {
        $traits = [
            SoftDeletes::class, Uuid::class, Filterable::class
        ];
        $cast_memberTraits = array_keys(class_uses(CastMember::class));
        $this->assertEquals($traits, $cast_memberTraits);
    }

    public function testCastsAttribute()
    {
        $casts = ['id' => 'string', 'type' => 'integer'];
        $this->assertEquals($casts, $this->cast_member->getCasts());
    }

    public function testIncrementingAttribute()
    {
        $this->assertFalse($this->cast_member->incrementing);
    }

    public function testDatesAttribute()
    {
        $dates = ['deleted_at', 'updated_at', 'created_at'];
        foreach ($dates as $date) {
            $this->assertContains($date, $this->cast_member->getDates());
        }
        $this->assertCount(count($dates), $this->cast_member->getDates());
    }
}
